iframe(1) -- display content in iframe
======================================

## SYNOPSIS

`iframe` [-o <opts>] [-c <css>] [-a <sopts>] [-zO] <template> [<obj>...]<br>
`iframe` [-o <opts>] [-c <css>] [-a <sopts>] [-zO] -s <tstr> [<obj>...]

## DESCRIPTION

**iframe** filters objects through a sandboxed iframe. The HTML/Javascript of
the iframe typically presents a GUI to enable users to visualize, select or
transform objects passing through them. In the first form, if <template> is a
path, **iframe** sets the `srcdoc` property of the iframe to the contents of
<template>. If <template> is a URL, then the URL is directly set as the `src`
of the iframe.  In the second form, the supplied string is used as the `srcdoc`
of the iframe.

Communication between the **iframe** utility and the child iframe follows the
pframe(7) protocol. Multiple **iframe** commands may chained into a pipeline,
allowing creation of cascading visual filters.

The following options are available:

  * `-o ` <opts>:
    Options in the options(7) format which are passed to the child iframe.
  
  * `-c ` <css>:
    CSS to be applied to the iframe, specified as a JSON string. This can
    be used for setting the dimensions of the iframe. If the height is
    specified, then it is not readjusted on receipt of config messages from the
    child iframe.

  * `-a ` <sopts>:
    Comma separated list of sandbox options. These can be one or more of
    "same-origin", "scripts", "forms", "popups", "pointer-lock",
    "top-navigation". They correspond to the "allow-x" attribute values of the
    "sandbox" property of the iframe. By default, <sopts> is assumed to be
    "scripts". Note that options specified are not additive to the defaults;
    `-a same-origin,scripts` must be specified in case both "allow-same-origin"
    and "allow-scripts" attributes are desired.

  * `-z`:
    Minimal, "dumb" mode protocol, described as protocol version 0 in
    pframe(7). Used for quick and dirty adaptation of arbitrary HTML/JS
    to receive objects from **iframe**. `-z` implies `-O`.

  * `-O`:
    Child iframes are usually created in per-command "extra div"s. Using this
    option emits the iframe to standard output instead.

## DIAGNOSTICS

The **iframe** command exits with `true` on success and non-`true` if an error
occurs.

## EXAMPLES

Plot the geographical location of websites. `probe`, `counter` and `map` use
**iframe** internally.

    $ echo -r www.google.com www.bbc.co.uk www.nytimes.com | probe -q one -m auto -p | counter "IPs processed" | geoip | map

Plot countrywise life expectancy statistics to a world map template.

    $ cat http://pigshell.com/sample/life-expectancy.html | hgrep -r 0 table.wikitable | table2js foo country data | iframe /usr/template/d3-worldmap1

Display a D3 example (no input data).

    $ iframe -a 'same-origin,scripts' http://bl.ocks.org/mbostock/raw/3883245/ </dev/null

Subvert D3 example above to display our own data.

    $ echo "date,close\n1-May-08,10\n1-May-10,40\n1-Jun-12,100\n1-May-13,70" | csv2js | iframe -zs $(cat http://bl.ocks.org/mbostock/raw/3883245/ | to text | jf 'x.replace(/d3.tsv.*{/, "window.addEventListener(\'message\', function(e) { var data = e.data.data;")')

## SECURITY

IFrames are placed in a sandbox to minimize security issues with running unknown
code. Opening up privileges, especially `top-navigation`, must be done with 
care as it can result in the iframed-content breaking out of the sandbox and
accessing all content mounted within _pigshell_.

## SEE ALSO

pframe(7), template(1)
